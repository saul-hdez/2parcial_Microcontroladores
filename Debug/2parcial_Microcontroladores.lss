
2parcial_Microcontroladores.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000800  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  00000800  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  20000434  00000c34  00020434  2**2
                  ALLOC
  3 .stack        00002004  20000474  00000c74  00020434  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  0002045c  2**0
                  CONTENTS, READONLY
  6 .debug_info   00009b3c  00000000  00000000  000204b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b17  00000000  00000000  00029ff1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000819  00000000  00000000  0002ab08  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000160  00000000  00000000  0002b321  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000f0  00000000  00000000  0002b481  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00001546  00000000  00000000  0002b571  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   000030d7  00000000  00000000  0002cab7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0006ed48  00000000  00000000  0002fb8e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00000420  00000000  00000000  0009e8d8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
   0:	78 24 00 20 f9 04 00 00 f5 04 00 00 f5 04 00 00     x$. ............
	...
  2c:	f5 04 00 00 00 00 00 00 00 00 00 00 f5 04 00 00     ................
  3c:	f5 04 00 00 f5 04 00 00 f5 04 00 00 f5 04 00 00     ................
  4c:	f5 04 00 00 f5 04 00 00 f5 04 00 00 f5 04 00 00     ................
  5c:	f5 04 00 00 f5 04 00 00 f5 04 00 00 f5 04 00 00     ................
  6c:	f5 04 00 00 f5 04 00 00 f5 04 00 00 f5 04 00 00     ................
  7c:	f5 04 00 00 f5 04 00 00 f5 04 00 00 f5 04 00 00     ................
  8c:	f5 04 00 00 f5 04 00 00 00 00 00 00 00 00 00 00     ................
  9c:	f5 04 00 00 f5 04 00 00 f5 04 00 00 f5 04 00 00     ................
  ac:	f5 04 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
  b4:	b510      	push	{r4, lr}
  b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
  b8:	7823      	ldrb	r3, [r4, #0]
  ba:	2b00      	cmp	r3, #0
  bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
  be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
  c0:	2b00      	cmp	r3, #0
  c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
  c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
  c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
  c8:	bf00      	nop
  ca:	2301      	movs	r3, #1
  cc:	7023      	strb	r3, [r4, #0]
  ce:	bd10      	pop	{r4, pc}
  d0:	20000434 	.word	0x20000434
  d4:	00000000 	.word	0x00000000
  d8:	00000800 	.word	0x00000800

000000dc <frame_dummy>:
  dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
  de:	b510      	push	{r4, lr}
  e0:	2b00      	cmp	r3, #0
  e2:	d003      	beq.n	ec <frame_dummy+0x10>
  e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
  e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
  e8:	e000      	b.n	ec <frame_dummy+0x10>
  ea:	bf00      	nop
  ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
  ee:	6803      	ldr	r3, [r0, #0]
  f0:	2b00      	cmp	r3, #0
  f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
  f4:	bd10      	pop	{r4, pc}
  f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
  f8:	2b00      	cmp	r3, #0
  fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
  fc:	4798      	blx	r3
  fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
 100:	00000000 	.word	0x00000000
 104:	20000438 	.word	0x20000438
 108:	00000800 	.word	0x00000800
 10c:	00000800 	.word	0x00000800
 110:	00000000 	.word	0x00000000

00000114 <gclkCLKCTRL>:
	//WRTLOCK=0, CLKEN=1 enable, GEN=0x2 genclock3, ID=0x1B TC3
	gclkCLKCTRL( NULL, 1, GCLK_CLKCTRL_GEN_GCLK3_Val, GCLK_CLKCTRL_ID_TCC2_TC3_Val ); // Clock configuration for TC3
	
}

void gclkCLKCTRL( uint16_t lock,  uint16_t enable, uint16_t generator, uint16_t id ) {
 114:	b570      	push	{r4, r5, r6, lr}
 116:	000e      	movs	r6, r1
		//Main configurations
		GCLK->CLKCTRL.reg |= GCLK_CLKCTRL_ID( id ) | GCLK_CLKCTRL_GEN( generator ) | GCLK_CLKCTRL_GEN_GCLK0 | GCLK_CLKCTRL_ID(TCC0_GCLK_ID); 
 118:	4d12      	ldr	r5, [pc, #72]	; (164 <gclkCLKCTRL+0x50>)
 11a:	8869      	ldrh	r1, [r5, #2]
 11c:	243f      	movs	r4, #63	; 0x3f
 11e:	4023      	ands	r3, r4
 120:	241a      	movs	r4, #26
 122:	4321      	orrs	r1, r4
 124:	430b      	orrs	r3, r1
 126:	0212      	lsls	r2, r2, #8
 128:	21f0      	movs	r1, #240	; 0xf0
 12a:	0109      	lsls	r1, r1, #4
 12c:	400a      	ands	r2, r1
 12e:	4313      	orrs	r3, r2
 130:	b29b      	uxth	r3, r3
 132:	806b      	strh	r3, [r5, #2]
		GCLK->CLKCTRL.bit.CLKEN |= enable;
 134:	8869      	ldrh	r1, [r5, #2]
 136:	0449      	lsls	r1, r1, #17
 138:	0fc9      	lsrs	r1, r1, #31
 13a:	4331      	orrs	r1, r6
 13c:	2301      	movs	r3, #1
 13e:	886a      	ldrh	r2, [r5, #2]
 140:	4019      	ands	r1, r3
 142:	0389      	lsls	r1, r1, #14
 144:	4c08      	ldr	r4, [pc, #32]	; (168 <gclkCLKCTRL+0x54>)
 146:	4022      	ands	r2, r4
 148:	4311      	orrs	r1, r2
 14a:	8069      	strh	r1, [r5, #2]
		//Other configurations
		GCLK->CLKCTRL.bit.WRTLOCK |= lock;
 14c:	886a      	ldrh	r2, [r5, #2]
 14e:	0bd2      	lsrs	r2, r2, #15
 150:	4310      	orrs	r0, r2
 152:	4003      	ands	r3, r0
 154:	8868      	ldrh	r0, [r5, #2]
 156:	03db      	lsls	r3, r3, #15
 158:	0440      	lsls	r0, r0, #17
 15a:	0c40      	lsrs	r0, r0, #17
 15c:	4318      	orrs	r0, r3
 15e:	8068      	strh	r0, [r5, #2]
} 
 160:	bd70      	pop	{r4, r5, r6, pc}
 162:	46c0      	nop			; (mov r8, r8)
 164:	40000c00 	.word	0x40000c00
 168:	ffffbfff 	.word	0xffffbfff

0000016c <gclkInit>:
void gclkInit( ) {
 16c:	b510      	push	{r4, lr}
	gclkCLKCTRL( NULL, 1, GCLK_CLKCTRL_GEN_GCLK0_Val, GCLK_CLKCTRL_ID_SERCOM0_CORE_Val ); // Clock configuration for SERCOM0
 16e:	2314      	movs	r3, #20
 170:	2200      	movs	r2, #0
 172:	2101      	movs	r1, #1
 174:	2000      	movs	r0, #0
 176:	4c09      	ldr	r4, [pc, #36]	; (19c <gclkInit+0x30>)
 178:	47a0      	blx	r4
	gclkCLKCTRL( NULL, 1, GCLK_CLKCTRL_GEN_GCLK1_Val, GCLK_CLKCTRL_ID_EIC_Val ); // Clock configuration for EIC
 17a:	2305      	movs	r3, #5
 17c:	2201      	movs	r2, #1
 17e:	2101      	movs	r1, #1
 180:	2000      	movs	r0, #0
 182:	47a0      	blx	r4
	gclkCLKCTRL( NULL, 1, GCLK_CLKCTRL_GEN_GCLK2_Val, GCLK_CLKCTRL_ID_ADC_Val ); // Clock configuration for ADC
 184:	231e      	movs	r3, #30
 186:	2202      	movs	r2, #2
 188:	2101      	movs	r1, #1
 18a:	2000      	movs	r0, #0
 18c:	47a0      	blx	r4
	gclkCLKCTRL( NULL, 1, GCLK_CLKCTRL_GEN_GCLK3_Val, GCLK_CLKCTRL_ID_TCC2_TC3_Val ); // Clock configuration for TC3
 18e:	231b      	movs	r3, #27
 190:	2203      	movs	r2, #3
 192:	2101      	movs	r1, #1
 194:	2000      	movs	r0, #0
 196:	47a0      	blx	r4
}
 198:	bd10      	pop	{r4, pc}
 19a:	46c0      	nop			; (mov r8, r8)
 19c:	00000115 	.word	0x00000115

000001a0 <resetTCCModule>:

void resetTCCModule(void){
	PORT->Group[0].DIRSET.reg = PORT_PA15;
 1a0:	4b0e      	ldr	r3, [pc, #56]	; (1dc <resetTCCModule+0x3c>)
 1a2:	2280      	movs	r2, #128	; 0x80
 1a4:	0212      	lsls	r2, r2, #8
 1a6:	609a      	str	r2, [r3, #8]
	PORT->Group[0].OUTCLR.reg = PORT_PA15;
 1a8:	615a      	str	r2, [r3, #20]
	PORT->Group[0].PINCFG[15].reg |= PORT_PINCFG_PMUXEN;
 1aa:	214f      	movs	r1, #79	; 0x4f
 1ac:	5c5a      	ldrb	r2, [r3, r1]
 1ae:	2001      	movs	r0, #1
 1b0:	4302      	orrs	r2, r0
 1b2:	545a      	strb	r2, [r3, r1]
	PORT->Group[0].PMUX[4 >> 1].reg =  PORT_PMUX_PMUXO_E;
 1b4:	390f      	subs	r1, #15
 1b6:	2232      	movs	r2, #50	; 0x32
 1b8:	5499      	strb	r1, [r3, r2]
	/* reset TCC module */
	TCC0->CTRLA.reg = TCC_CTRLA_SWRST;
 1ba:	4b09      	ldr	r3, [pc, #36]	; (1e0 <resetTCCModule+0x40>)
 1bc:	3a31      	subs	r2, #49	; 0x31
 1be:	601a      	str	r2, [r3, #0]
	while (TCC0->SYNCBUSY.reg & TCC_SYNCBUSY_SWRST) {}
 1c0:	0019      	movs	r1, r3
 1c2:	688b      	ldr	r3, [r1, #8]
 1c4:	421a      	tst	r2, r3
 1c6:	d1fc      	bne.n	1c2 <resetTCCModule+0x22>
	TCC0->CTRLBCLR.reg = TCC_CTRLBCLR_DIR;     /* count up */
 1c8:	2201      	movs	r2, #1
 1ca:	4b05      	ldr	r3, [pc, #20]	; (1e0 <resetTCCModule+0x40>)
 1cc:	711a      	strb	r2, [r3, #4]
	while (TCC0->SYNCBUSY.reg & TCC_SYNCBUSY_CTRLB) {}	
 1ce:	0019      	movs	r1, r3
 1d0:	3203      	adds	r2, #3
 1d2:	688b      	ldr	r3, [r1, #8]
 1d4:	421a      	tst	r2, r3
 1d6:	d1fc      	bne.n	1d2 <resetTCCModule+0x32>
}
 1d8:	4770      	bx	lr
 1da:	46c0      	nop			; (mov r8, r8)
 1dc:	41004400 	.word	0x41004400
 1e0:	42002000 	.word	0x42002000

000001e4 <configureTCC>:

void configureTCC(void){
	/* configure the TCC device */
	TCC0->CTRLA.reg = (TCC_CTRLA_PRESCSYNC_GCLK_Val | TCC_CTRLA_PRESCALER(TCC_CTRLA_PRESCALER_DIV1024_Val));
 1e4:	4b09      	ldr	r3, [pc, #36]	; (20c <configureTCC+0x28>)
 1e6:	22e0      	movs	r2, #224	; 0xe0
 1e8:	00d2      	lsls	r2, r2, #3
 1ea:	601a      	str	r2, [r3, #0]
	/* select the waveform generation mode -> normal PWM */
	TCC0->WAVE.reg = (TCC_WAVE_WAVEGEN_NPWM);
 1ec:	2202      	movs	r2, #2
 1ee:	63da      	str	r2, [r3, #60]	; 0x3c
	while (TCC0->SYNCBUSY.reg & TCC_SYNCBUSY_WAVE) {}
 1f0:	0019      	movs	r1, r3
 1f2:	323e      	adds	r2, #62	; 0x3e
 1f4:	688b      	ldr	r3, [r1, #8]
 1f6:	421a      	tst	r2, r3
 1f8:	d1fc      	bne.n	1f4 <configureTCC+0x10>
	/* set the selected period */
	TCC0->PER.reg = (1024 - 1);
 1fa:	4a05      	ldr	r2, [pc, #20]	; (210 <configureTCC+0x2c>)
 1fc:	4b03      	ldr	r3, [pc, #12]	; (20c <configureTCC+0x28>)
 1fe:	641a      	str	r2, [r3, #64]	; 0x40
	while (TCC0->SYNCBUSY.reg & TCC_SYNCBUSY_PER) {}
 200:	0019      	movs	r1, r3
 202:	2280      	movs	r2, #128	; 0x80
 204:	688b      	ldr	r3, [r1, #8]
 206:	421a      	tst	r2, r3
 208:	d1fc      	bne.n	204 <configureTCC+0x20>
}
 20a:	4770      	bx	lr
 20c:	42002000 	.word	0x42002000
 210:	000003ff 	.word	0x000003ff

00000214 <pwmInit>:

void pwmInit(void){
	/* start PWM operation */
	TCC0->CTRLA.reg |= (TCC_CTRLA_ENABLE);
 214:	4a02      	ldr	r2, [pc, #8]	; (220 <pwmInit+0xc>)
 216:	6813      	ldr	r3, [r2, #0]
 218:	2102      	movs	r1, #2
 21a:	430b      	orrs	r3, r1
 21c:	6013      	str	r3, [r2, #0]
 21e:	4770      	bx	lr
 220:	42002000 	.word	0x42002000

00000224 <pmAPBCMASK>:
	pmAPBAMASK( PM_APBAMASK_EIC);
	pmAPBAMASK( PM_APBCMASK_TCC0);
}

void pmAPBCMASK( uint32_t value) {
	PM->APBCMASK.reg |= value;
 224:	4a02      	ldr	r2, [pc, #8]	; (230 <pmAPBCMASK+0xc>)
 226:	6a13      	ldr	r3, [r2, #32]
 228:	4318      	orrs	r0, r3
 22a:	6210      	str	r0, [r2, #32]
}
 22c:	4770      	bx	lr
 22e:	46c0      	nop			; (mov r8, r8)
 230:	40000400 	.word	0x40000400

00000234 <pmAPBAMASK>:

void pmAPBAMASK( uint32_t value ) 
{
	PM->APBAMASK.reg |= value;
 234:	4a02      	ldr	r2, [pc, #8]	; (240 <pmAPBAMASK+0xc>)
 236:	6993      	ldr	r3, [r2, #24]
 238:	4318      	orrs	r0, r3
 23a:	6190      	str	r0, [r2, #24]
}
 23c:	4770      	bx	lr
 23e:	46c0      	nop			; (mov r8, r8)
 240:	40000400 	.word	0x40000400

00000244 <pmInit>:
void pmInit() {
 244:	b510      	push	{r4, lr}
	pmAPBCMASK( PM_APBCMASK_SERCOM0 | PM_APBCMASK_ADC | PM_APBCMASK_TC3); 
 246:	4805      	ldr	r0, [pc, #20]	; (25c <pmInit+0x18>)
 248:	4b05      	ldr	r3, [pc, #20]	; (260 <pmInit+0x1c>)
 24a:	4798      	blx	r3
	pmAPBAMASK( PM_APBAMASK_EIC);
 24c:	2040      	movs	r0, #64	; 0x40
 24e:	4c05      	ldr	r4, [pc, #20]	; (264 <pmInit+0x20>)
 250:	47a0      	blx	r4
	pmAPBAMASK( PM_APBCMASK_TCC0);
 252:	2080      	movs	r0, #128	; 0x80
 254:	0040      	lsls	r0, r0, #1
 256:	47a0      	blx	r4
}
 258:	bd10      	pop	{r4, pc}
 25a:	46c0      	nop			; (mov r8, r8)
 25c:	00010804 	.word	0x00010804
 260:	00000225 	.word	0x00000225
 264:	00000235 	.word	0x00000235

00000268 <portProps>:
 268:	b530      	push	{r4, r5, lr}
 26a:	01c4      	lsls	r4, r0, #7
 26c:	190c      	adds	r4, r1, r4
 26e:	4d09      	ldr	r5, [pc, #36]	; (294 <portProps+0x2c>)
 270:	46ac      	mov	ip, r5
 272:	4464      	add	r4, ip
 274:	7022      	strb	r2, [r4, #0]
 276:	7822      	ldrb	r2, [r4, #0]
 278:	07d2      	lsls	r2, r2, #31
 27a:	d400      	bmi.n	27e <portProps+0x16>
 27c:	bd30      	pop	{r4, r5, pc}
 27e:	0849      	lsrs	r1, r1, #1
 280:	01c0      	lsls	r0, r0, #7
 282:	1809      	adds	r1, r1, r0
 284:	4a04      	ldr	r2, [pc, #16]	; (298 <portProps+0x30>)
 286:	4694      	mov	ip, r2
 288:	4461      	add	r1, ip
 28a:	780a      	ldrb	r2, [r1, #0]
 28c:	4313      	orrs	r3, r2
 28e:	700b      	strb	r3, [r1, #0]
 290:	e7f4      	b.n	27c <portProps+0x14>
 292:	46c0      	nop			; (mov r8, r8)
 294:	41004440 	.word	0x41004440
 298:	41004430 	.word	0x41004430

0000029c <portInit>:
 29c:	b510      	push	{r4, lr}
 29e:	2302      	movs	r3, #2
 2a0:	2203      	movs	r2, #3
 2a2:	2108      	movs	r1, #8
 2a4:	2000      	movs	r0, #0
 2a6:	4c17      	ldr	r4, [pc, #92]	; (304 <portInit+0x68>)
 2a8:	47a0      	blx	r4
 2aa:	2320      	movs	r3, #32
 2ac:	2201      	movs	r2, #1
 2ae:	210b      	movs	r1, #11
 2b0:	2000      	movs	r0, #0
 2b2:	47a0      	blx	r4
 2b4:	2320      	movs	r3, #32
 2b6:	2203      	movs	r2, #3
 2b8:	2109      	movs	r1, #9
 2ba:	2000      	movs	r0, #0
 2bc:	47a0      	blx	r4
 2be:	2302      	movs	r3, #2
 2c0:	2203      	movs	r2, #3
 2c2:	210a      	movs	r1, #10
 2c4:	2000      	movs	r0, #0
 2c6:	47a0      	blx	r4
 2c8:	2300      	movs	r3, #0
 2ca:	2200      	movs	r2, #0
 2cc:	210e      	movs	r1, #14
 2ce:	2000      	movs	r0, #0
 2d0:	47a0      	blx	r4
 2d2:	2300      	movs	r3, #0
 2d4:	2200      	movs	r2, #0
 2d6:	211b      	movs	r1, #27
 2d8:	2000      	movs	r0, #0
 2da:	47a0      	blx	r4
 2dc:	4b0a      	ldr	r3, [pc, #40]	; (308 <portInit+0x6c>)
 2de:	2280      	movs	r2, #128	; 0x80
 2e0:	0052      	lsls	r2, r2, #1
 2e2:	605a      	str	r2, [r3, #4]
 2e4:	2280      	movs	r2, #128	; 0x80
 2e6:	0112      	lsls	r2, r2, #4
 2e8:	609a      	str	r2, [r3, #8]
 2ea:	2280      	movs	r2, #128	; 0x80
 2ec:	0092      	lsls	r2, r2, #2
 2ee:	605a      	str	r2, [r3, #4]
 2f0:	2180      	movs	r1, #128	; 0x80
 2f2:	00c9      	lsls	r1, r1, #3
 2f4:	6059      	str	r1, [r3, #4]
 2f6:	2280      	movs	r2, #128	; 0x80
 2f8:	0512      	lsls	r2, r2, #20
 2fa:	609a      	str	r2, [r3, #8]
 2fc:	6199      	str	r1, [r3, #24]
 2fe:	619a      	str	r2, [r3, #24]
 300:	bd10      	pop	{r4, pc}
 302:	46c0      	nop			; (mov r8, r8)
 304:	00000269 	.word	0x00000269
 308:	41004400 	.word	0x41004400

0000030c <sercom0Enable>:
 30c:	4b05      	ldr	r3, [pc, #20]	; (324 <sercom0Enable+0x18>)
 30e:	228f      	movs	r2, #143	; 0x8f
 310:	761a      	strb	r2, [r3, #24]
 312:	681a      	ldr	r2, [r3, #0]
 314:	2102      	movs	r1, #2
 316:	430a      	orrs	r2, r1
 318:	601a      	str	r2, [r3, #0]
 31a:	001a      	movs	r2, r3
 31c:	69d3      	ldr	r3, [r2, #28]
 31e:	079b      	lsls	r3, r3, #30
 320:	d4fc      	bmi.n	31c <sercom0Enable+0x10>
 322:	4770      	bx	lr
 324:	42000800 	.word	0x42000800

00000328 <sercom0CTRLA>:
 328:	b5f0      	push	{r4, r5, r6, r7, lr}
 32a:	0006      	movs	r6, r0
 32c:	000d      	movs	r5, r1
 32e:	0010      	movs	r0, r2
 330:	4c36      	ldr	r4, [pc, #216]	; (40c <sercom0CTRLA+0xe4>)
 332:	6827      	ldr	r7, [r4, #0]
 334:	9a09      	ldr	r2, [sp, #36]	; 0x24
 336:	0091      	lsls	r1, r2, #2
 338:	221c      	movs	r2, #28
 33a:	400a      	ands	r2, r1
 33c:	433a      	orrs	r2, r7
 33e:	6022      	str	r2, [r4, #0]
 340:	6821      	ldr	r1, [r4, #0]
 342:	0089      	lsls	r1, r1, #2
 344:	0fc9      	lsrs	r1, r1, #31
 346:	4329      	orrs	r1, r5
 348:	2501      	movs	r5, #1
 34a:	6822      	ldr	r2, [r4, #0]
 34c:	4029      	ands	r1, r5
 34e:	0749      	lsls	r1, r1, #29
 350:	4f2f      	ldr	r7, [pc, #188]	; (410 <sercom0CTRLA+0xe8>)
 352:	403a      	ands	r2, r7
 354:	4311      	orrs	r1, r2
 356:	6021      	str	r1, [r4, #0]
 358:	6822      	ldr	r2, [r4, #0]
 35a:	00d2      	lsls	r2, r2, #3
 35c:	0fd2      	lsrs	r2, r2, #31
 35e:	4302      	orrs	r2, r0
 360:	6821      	ldr	r1, [r4, #0]
 362:	402a      	ands	r2, r5
 364:	0712      	lsls	r2, r2, #28
 366:	482b      	ldr	r0, [pc, #172]	; (414 <sercom0CTRLA+0xec>)
 368:	4001      	ands	r1, r0
 36a:	430a      	orrs	r2, r1
 36c:	6022      	str	r2, [r4, #0]
 36e:	6821      	ldr	r1, [r4, #0]
 370:	9a06      	ldr	r2, [sp, #24]
 372:	0412      	lsls	r2, r2, #16
 374:	20c0      	movs	r0, #192	; 0xc0
 376:	0280      	lsls	r0, r0, #10
 378:	4002      	ands	r2, r0
 37a:	430a      	orrs	r2, r1
 37c:	9905      	ldr	r1, [sp, #20]
 37e:	0509      	lsls	r1, r1, #20
 380:	20c0      	movs	r0, #192	; 0xc0
 382:	0380      	lsls	r0, r0, #14
 384:	4001      	ands	r1, r0
 386:	430a      	orrs	r2, r1
 388:	061b      	lsls	r3, r3, #24
 38a:	21f0      	movs	r1, #240	; 0xf0
 38c:	0509      	lsls	r1, r1, #20
 38e:	400b      	ands	r3, r1
 390:	4313      	orrs	r3, r2
 392:	6023      	str	r3, [r4, #0]
 394:	6820      	ldr	r0, [r4, #0]
 396:	0040      	lsls	r0, r0, #1
 398:	0fc0      	lsrs	r0, r0, #31
 39a:	4330      	orrs	r0, r6
 39c:	6823      	ldr	r3, [r4, #0]
 39e:	4028      	ands	r0, r5
 3a0:	0780      	lsls	r0, r0, #30
 3a2:	4a1d      	ldr	r2, [pc, #116]	; (418 <sercom0CTRLA+0xf0>)
 3a4:	4013      	ands	r3, r2
 3a6:	4318      	orrs	r0, r3
 3a8:	6020      	str	r0, [r4, #0]
 3aa:	6822      	ldr	r2, [r4, #0]
 3ac:	05d2      	lsls	r2, r2, #23
 3ae:	0fd2      	lsrs	r2, r2, #31
 3b0:	9b07      	ldr	r3, [sp, #28]
 3b2:	431a      	orrs	r2, r3
 3b4:	6823      	ldr	r3, [r4, #0]
 3b6:	402a      	ands	r2, r5
 3b8:	0212      	lsls	r2, r2, #8
 3ba:	4918      	ldr	r1, [pc, #96]	; (41c <sercom0CTRLA+0xf4>)
 3bc:	400b      	ands	r3, r1
 3be:	431a      	orrs	r2, r3
 3c0:	6022      	str	r2, [r4, #0]
 3c2:	6822      	ldr	r2, [r4, #0]
 3c4:	0612      	lsls	r2, r2, #24
 3c6:	0fd2      	lsrs	r2, r2, #31
 3c8:	9b08      	ldr	r3, [sp, #32]
 3ca:	431a      	orrs	r2, r3
 3cc:	6823      	ldr	r3, [r4, #0]
 3ce:	402a      	ands	r2, r5
 3d0:	01d2      	lsls	r2, r2, #7
 3d2:	3182      	adds	r1, #130	; 0x82
 3d4:	31ff      	adds	r1, #255	; 0xff
 3d6:	438b      	bics	r3, r1
 3d8:	431a      	orrs	r2, r3
 3da:	6022      	str	r2, [r4, #0]
 3dc:	6823      	ldr	r3, [r4, #0]
 3de:	07db      	lsls	r3, r3, #31
 3e0:	0fdb      	lsrs	r3, r3, #31
 3e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 3e4:	4313      	orrs	r3, r2
 3e6:	6822      	ldr	r2, [r4, #0]
 3e8:	402b      	ands	r3, r5
 3ea:	43aa      	bics	r2, r5
 3ec:	4313      	orrs	r3, r2
 3ee:	6023      	str	r3, [r4, #0]
 3f0:	6823      	ldr	r3, [r4, #0]
 3f2:	079b      	lsls	r3, r3, #30
 3f4:	0fdb      	lsrs	r3, r3, #31
 3f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 3f8:	4313      	orrs	r3, r2
 3fa:	6822      	ldr	r2, [r4, #0]
 3fc:	402b      	ands	r3, r5
 3fe:	005b      	lsls	r3, r3, #1
 400:	397e      	subs	r1, #126	; 0x7e
 402:	438a      	bics	r2, r1
 404:	4313      	orrs	r3, r2
 406:	6023      	str	r3, [r4, #0]
 408:	bdf0      	pop	{r4, r5, r6, r7, pc}
 40a:	46c0      	nop			; (mov r8, r8)
 40c:	42000800 	.word	0x42000800
 410:	dfffffff 	.word	0xdfffffff
 414:	efffffff 	.word	0xefffffff
 418:	bfffffff 	.word	0xbfffffff
 41c:	fffffeff 	.word	0xfffffeff

00000420 <sercom0CTRLB>:
 420:	b5f0      	push	{r4, r5, r6, r7, lr}
 422:	0007      	movs	r7, r0
 424:	4c1d      	ldr	r4, [pc, #116]	; (49c <sercom0CTRLB+0x7c>)
 426:	6865      	ldr	r5, [r4, #4]
 428:	2007      	movs	r0, #7
 42a:	9e06      	ldr	r6, [sp, #24]
 42c:	4030      	ands	r0, r6
 42e:	4328      	orrs	r0, r5
 430:	6060      	str	r0, [r4, #4]
 432:	6866      	ldr	r6, [r4, #4]
 434:	04b6      	lsls	r6, r6, #18
 436:	0ff6      	lsrs	r6, r6, #31
 438:	4316      	orrs	r6, r2
 43a:	2501      	movs	r5, #1
 43c:	6862      	ldr	r2, [r4, #4]
 43e:	402e      	ands	r6, r5
 440:	0376      	lsls	r6, r6, #13
 442:	4817      	ldr	r0, [pc, #92]	; (4a0 <sercom0CTRLB+0x80>)
 444:	4002      	ands	r2, r0
 446:	4316      	orrs	r6, r2
 448:	6066      	str	r6, [r4, #4]
 44a:	6860      	ldr	r0, [r4, #4]
 44c:	0380      	lsls	r0, r0, #14
 44e:	0fc0      	lsrs	r0, r0, #31
 450:	4338      	orrs	r0, r7
 452:	6862      	ldr	r2, [r4, #4]
 454:	4028      	ands	r0, r5
 456:	0440      	lsls	r0, r0, #17
 458:	4e12      	ldr	r6, [pc, #72]	; (4a4 <sercom0CTRLB+0x84>)
 45a:	4032      	ands	r2, r6
 45c:	4310      	orrs	r0, r2
 45e:	6060      	str	r0, [r4, #4]
 460:	6862      	ldr	r2, [r4, #4]
 462:	0789      	lsls	r1, r1, #30
 464:	0c09      	lsrs	r1, r1, #16
 466:	4311      	orrs	r1, r2
 468:	6061      	str	r1, [r4, #4]
 46a:	6862      	ldr	r2, [r4, #4]
 46c:	0592      	lsls	r2, r2, #22
 46e:	0fd2      	lsrs	r2, r2, #31
 470:	431a      	orrs	r2, r3
 472:	6863      	ldr	r3, [r4, #4]
 474:	402a      	ands	r2, r5
 476:	0252      	lsls	r2, r2, #9
 478:	490b      	ldr	r1, [pc, #44]	; (4a8 <sercom0CTRLB+0x88>)
 47a:	400b      	ands	r3, r1
 47c:	431a      	orrs	r2, r3
 47e:	6062      	str	r2, [r4, #4]
 480:	6863      	ldr	r3, [r4, #4]
 482:	065b      	lsls	r3, r3, #25
 484:	0fdb      	lsrs	r3, r3, #31
 486:	9a05      	ldr	r2, [sp, #20]
 488:	4313      	orrs	r3, r2
 48a:	6862      	ldr	r2, [r4, #4]
 48c:	402b      	ands	r3, r5
 48e:	019b      	lsls	r3, r3, #6
 490:	2140      	movs	r1, #64	; 0x40
 492:	438a      	bics	r2, r1
 494:	4313      	orrs	r3, r2
 496:	6063      	str	r3, [r4, #4]
 498:	bdf0      	pop	{r4, r5, r6, r7, pc}
 49a:	46c0      	nop			; (mov r8, r8)
 49c:	42000800 	.word	0x42000800
 4a0:	ffffdfff 	.word	0xffffdfff
 4a4:	fffdffff 	.word	0xfffdffff
 4a8:	fffffdff 	.word	0xfffffdff

000004ac <sercom0Init>:
 4ac:	b530      	push	{r4, r5, lr}
 4ae:	b089      	sub	sp, #36	; 0x24
 4b0:	2400      	movs	r4, #0
 4b2:	9406      	str	r4, [sp, #24]
 4b4:	9405      	str	r4, [sp, #20]
 4b6:	2302      	movs	r3, #2
 4b8:	9304      	str	r3, [sp, #16]
 4ba:	9403      	str	r4, [sp, #12]
 4bc:	9402      	str	r4, [sp, #8]
 4be:	9301      	str	r3, [sp, #4]
 4c0:	9400      	str	r4, [sp, #0]
 4c2:	2300      	movs	r3, #0
 4c4:	2200      	movs	r2, #0
 4c6:	2100      	movs	r1, #0
 4c8:	2001      	movs	r0, #1
 4ca:	4d07      	ldr	r5, [pc, #28]	; (4e8 <sercom0Init+0x3c>)
 4cc:	47a8      	blx	r5
 4ce:	220c      	movs	r2, #12
 4d0:	4b06      	ldr	r3, [pc, #24]	; (4ec <sercom0Init+0x40>)
 4d2:	731a      	strb	r2, [r3, #12]
 4d4:	9401      	str	r4, [sp, #4]
 4d6:	9400      	str	r4, [sp, #0]
 4d8:	2300      	movs	r3, #0
 4da:	2200      	movs	r2, #0
 4dc:	2100      	movs	r1, #0
 4de:	2001      	movs	r0, #1
 4e0:	4c03      	ldr	r4, [pc, #12]	; (4f0 <sercom0Init+0x44>)
 4e2:	47a0      	blx	r4
 4e4:	b009      	add	sp, #36	; 0x24
 4e6:	bd30      	pop	{r4, r5, pc}
 4e8:	00000329 	.word	0x00000329
 4ec:	42000800 	.word	0x42000800
 4f0:	00000421 	.word	0x00000421

000004f4 <Dummy_Handler>:
 4f4:	e7fe      	b.n	4f4 <Dummy_Handler>
	...

000004f8 <Reset_Handler>:
 4f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 4fa:	4a2a      	ldr	r2, [pc, #168]	; (5a4 <Reset_Handler+0xac>)
 4fc:	4b2a      	ldr	r3, [pc, #168]	; (5a8 <Reset_Handler+0xb0>)
 4fe:	429a      	cmp	r2, r3
 500:	d011      	beq.n	526 <Reset_Handler+0x2e>
 502:	001a      	movs	r2, r3
 504:	4b29      	ldr	r3, [pc, #164]	; (5ac <Reset_Handler+0xb4>)
 506:	429a      	cmp	r2, r3
 508:	d20d      	bcs.n	526 <Reset_Handler+0x2e>
 50a:	4a29      	ldr	r2, [pc, #164]	; (5b0 <Reset_Handler+0xb8>)
 50c:	3303      	adds	r3, #3
 50e:	1a9b      	subs	r3, r3, r2
 510:	089b      	lsrs	r3, r3, #2
 512:	3301      	adds	r3, #1
 514:	009b      	lsls	r3, r3, #2
 516:	2200      	movs	r2, #0
 518:	4823      	ldr	r0, [pc, #140]	; (5a8 <Reset_Handler+0xb0>)
 51a:	4922      	ldr	r1, [pc, #136]	; (5a4 <Reset_Handler+0xac>)
 51c:	588c      	ldr	r4, [r1, r2]
 51e:	5084      	str	r4, [r0, r2]
 520:	3204      	adds	r2, #4
 522:	429a      	cmp	r2, r3
 524:	d1fa      	bne.n	51c <Reset_Handler+0x24>
 526:	4a23      	ldr	r2, [pc, #140]	; (5b4 <Reset_Handler+0xbc>)
 528:	4b23      	ldr	r3, [pc, #140]	; (5b8 <Reset_Handler+0xc0>)
 52a:	429a      	cmp	r2, r3
 52c:	d20a      	bcs.n	544 <Reset_Handler+0x4c>
 52e:	43d3      	mvns	r3, r2
 530:	4921      	ldr	r1, [pc, #132]	; (5b8 <Reset_Handler+0xc0>)
 532:	185b      	adds	r3, r3, r1
 534:	2103      	movs	r1, #3
 536:	438b      	bics	r3, r1
 538:	3304      	adds	r3, #4
 53a:	189b      	adds	r3, r3, r2
 53c:	2100      	movs	r1, #0
 53e:	c202      	stmia	r2!, {r1}
 540:	4293      	cmp	r3, r2
 542:	d1fc      	bne.n	53e <Reset_Handler+0x46>
 544:	4a1d      	ldr	r2, [pc, #116]	; (5bc <Reset_Handler+0xc4>)
 546:	21ff      	movs	r1, #255	; 0xff
 548:	4b1d      	ldr	r3, [pc, #116]	; (5c0 <Reset_Handler+0xc8>)
 54a:	438b      	bics	r3, r1
 54c:	6093      	str	r3, [r2, #8]
 54e:	39fd      	subs	r1, #253	; 0xfd
 550:	2390      	movs	r3, #144	; 0x90
 552:	005b      	lsls	r3, r3, #1
 554:	4a1b      	ldr	r2, [pc, #108]	; (5c4 <Reset_Handler+0xcc>)
 556:	50d1      	str	r1, [r2, r3]
 558:	4a1b      	ldr	r2, [pc, #108]	; (5c8 <Reset_Handler+0xd0>)
 55a:	78d3      	ldrb	r3, [r2, #3]
 55c:	2503      	movs	r5, #3
 55e:	43ab      	bics	r3, r5
 560:	2402      	movs	r4, #2
 562:	4323      	orrs	r3, r4
 564:	70d3      	strb	r3, [r2, #3]
 566:	78d3      	ldrb	r3, [r2, #3]
 568:	270c      	movs	r7, #12
 56a:	43bb      	bics	r3, r7
 56c:	2608      	movs	r6, #8
 56e:	4333      	orrs	r3, r6
 570:	70d3      	strb	r3, [r2, #3]
 572:	4b16      	ldr	r3, [pc, #88]	; (5cc <Reset_Handler+0xd4>)
 574:	7b98      	ldrb	r0, [r3, #14]
 576:	2230      	movs	r2, #48	; 0x30
 578:	4390      	bics	r0, r2
 57a:	2220      	movs	r2, #32
 57c:	4310      	orrs	r0, r2
 57e:	7398      	strb	r0, [r3, #14]
 580:	7b99      	ldrb	r1, [r3, #14]
 582:	43b9      	bics	r1, r7
 584:	4331      	orrs	r1, r6
 586:	7399      	strb	r1, [r3, #14]
 588:	7b9a      	ldrb	r2, [r3, #14]
 58a:	43aa      	bics	r2, r5
 58c:	4322      	orrs	r2, r4
 58e:	739a      	strb	r2, [r3, #14]
 590:	4a0f      	ldr	r2, [pc, #60]	; (5d0 <Reset_Handler+0xd8>)
 592:	6853      	ldr	r3, [r2, #4]
 594:	2180      	movs	r1, #128	; 0x80
 596:	430b      	orrs	r3, r1
 598:	6053      	str	r3, [r2, #4]
 59a:	4b0e      	ldr	r3, [pc, #56]	; (5d4 <Reset_Handler+0xdc>)
 59c:	4798      	blx	r3
 59e:	4b0e      	ldr	r3, [pc, #56]	; (5d8 <Reset_Handler+0xe0>)
 5a0:	4798      	blx	r3
 5a2:	e7fe      	b.n	5a2 <Reset_Handler+0xaa>
 5a4:	00000800 	.word	0x00000800
 5a8:	20000000 	.word	0x20000000
 5ac:	20000434 	.word	0x20000434
 5b0:	20000004 	.word	0x20000004
 5b4:	20000434 	.word	0x20000434
 5b8:	20000474 	.word	0x20000474
 5bc:	e000ed00 	.word	0xe000ed00
 5c0:	00000000 	.word	0x00000000
 5c4:	41007000 	.word	0x41007000
 5c8:	41005000 	.word	0x41005000
 5cc:	41004800 	.word	0x41004800
 5d0:	41004000 	.word	0x41004000
 5d4:	00000639 	.word	0x00000639
 5d8:	000005ed 	.word	0x000005ed

000005dc <SystemInit>:
 5dc:	4a01      	ldr	r2, [pc, #4]	; (5e4 <SystemInit+0x8>)
 5de:	4b02      	ldr	r3, [pc, #8]	; (5e8 <SystemInit+0xc>)
 5e0:	601a      	str	r2, [r3, #0]
 5e2:	4770      	bx	lr
 5e4:	000f4240 	.word	0x000f4240
 5e8:	20000000 	.word	0x20000000

000005ec <main>:
	}
}


int main( void ) 
{
 5ec:	b510      	push	{r4, lr}
	/* Declare variables */

    /* Initialize the SAM system */
    SystemInit( );
 5ee:	4b09      	ldr	r3, [pc, #36]	; (614 <main+0x28>)
 5f0:	4798      	blx	r3
	//STEP 1. Configure PORT to define PIN properties and directions
	myPortInit( );
 5f2:	4b09      	ldr	r3, [pc, #36]	; (618 <main+0x2c>)
 5f4:	4798      	blx	r3
	//STEP 2. Configure PM to enable APBx clock for the corresponding peripheral
	myPmInit( );
 5f6:	4b09      	ldr	r3, [pc, #36]	; (61c <main+0x30>)
 5f8:	4798      	blx	r3
	//STEP 3. Configure GCLK to enable and define clock source for the corresponding peripheral
	myGclkInit( );
 5fa:	4b09      	ldr	r3, [pc, #36]	; (620 <main+0x34>)
 5fc:	4798      	blx	r3
	//STEP 4. Configure SERCOMx to define operating modes, pads, baud rate, character size, etc...	
	mySercom0Init( );
 5fe:	4b09      	ldr	r3, [pc, #36]	; (624 <main+0x38>)
 600:	4798      	blx	r3
	//STEP 5. Enable the corresponding vector and available INTERRUPTs
	//...
	//STEP 6. Clear the peripheral FLAGs and enable the peripheral
	mySercom0Enable( );	
 602:	4b09      	ldr	r3, [pc, #36]	; (628 <main+0x3c>)
 604:	4798      	blx	r3
	
	resetTCCModule();
 606:	4b09      	ldr	r3, [pc, #36]	; (62c <main+0x40>)
 608:	4798      	blx	r3
	configureTCC();
 60a:	4b09      	ldr	r3, [pc, #36]	; (630 <main+0x44>)
 60c:	4798      	blx	r3
	pwmInit();
 60e:	4b09      	ldr	r3, [pc, #36]	; (634 <main+0x48>)
 610:	4798      	blx	r3
 612:	e7fe      	b.n	612 <main+0x26>
 614:	000005dd 	.word	0x000005dd
 618:	0000029d 	.word	0x0000029d
 61c:	00000245 	.word	0x00000245
 620:	0000016d 	.word	0x0000016d
 624:	000004ad 	.word	0x000004ad
 628:	0000030d 	.word	0x0000030d
 62c:	000001a1 	.word	0x000001a1
 630:	000001e5 	.word	0x000001e5
 634:	00000215 	.word	0x00000215

00000638 <__libc_init_array>:
 638:	b570      	push	{r4, r5, r6, lr}
 63a:	4e0d      	ldr	r6, [pc, #52]	; (670 <__libc_init_array+0x38>)
 63c:	4d0d      	ldr	r5, [pc, #52]	; (674 <__libc_init_array+0x3c>)
 63e:	2400      	movs	r4, #0
 640:	1bad      	subs	r5, r5, r6
 642:	10ad      	asrs	r5, r5, #2
 644:	d005      	beq.n	652 <__libc_init_array+0x1a>
 646:	00a3      	lsls	r3, r4, #2
 648:	58f3      	ldr	r3, [r6, r3]
 64a:	3401      	adds	r4, #1
 64c:	4798      	blx	r3
 64e:	42a5      	cmp	r5, r4
 650:	d1f9      	bne.n	646 <__libc_init_array+0xe>
 652:	f000 f8c3 	bl	7dc <_init>
 656:	4e08      	ldr	r6, [pc, #32]	; (678 <__libc_init_array+0x40>)
 658:	4d08      	ldr	r5, [pc, #32]	; (67c <__libc_init_array+0x44>)
 65a:	2400      	movs	r4, #0
 65c:	1bad      	subs	r5, r5, r6
 65e:	10ad      	asrs	r5, r5, #2
 660:	d005      	beq.n	66e <__libc_init_array+0x36>
 662:	00a3      	lsls	r3, r4, #2
 664:	58f3      	ldr	r3, [r6, r3]
 666:	3401      	adds	r4, #1
 668:	4798      	blx	r3
 66a:	42a5      	cmp	r5, r4
 66c:	d1f9      	bne.n	662 <__libc_init_array+0x2a>
 66e:	bd70      	pop	{r4, r5, r6, pc}
 670:	000007e8 	.word	0x000007e8
 674:	000007e8 	.word	0x000007e8
 678:	000007e8 	.word	0x000007e8
 67c:	000007f0 	.word	0x000007f0

00000680 <register_fini>:
 680:	4b03      	ldr	r3, [pc, #12]	; (690 <register_fini+0x10>)
 682:	b510      	push	{r4, lr}
 684:	2b00      	cmp	r3, #0
 686:	d002      	beq.n	68e <register_fini+0xe>
 688:	4802      	ldr	r0, [pc, #8]	; (694 <register_fini+0x14>)
 68a:	f000 f805 	bl	698 <atexit>
 68e:	bd10      	pop	{r4, pc}
 690:	00000000 	.word	0x00000000
 694:	000006a9 	.word	0x000006a9

00000698 <atexit>:
 698:	b510      	push	{r4, lr}
 69a:	0001      	movs	r1, r0
 69c:	2300      	movs	r3, #0
 69e:	2200      	movs	r2, #0
 6a0:	2000      	movs	r0, #0
 6a2:	f000 f81f 	bl	6e4 <__register_exitproc>
 6a6:	bd10      	pop	{r4, pc}

000006a8 <__libc_fini_array>:
 6a8:	b570      	push	{r4, r5, r6, lr}
 6aa:	4b09      	ldr	r3, [pc, #36]	; (6d0 <__libc_fini_array+0x28>)
 6ac:	4c09      	ldr	r4, [pc, #36]	; (6d4 <__libc_fini_array+0x2c>)
 6ae:	1ae4      	subs	r4, r4, r3
 6b0:	10a4      	asrs	r4, r4, #2
 6b2:	d009      	beq.n	6c8 <__libc_fini_array+0x20>
 6b4:	4a08      	ldr	r2, [pc, #32]	; (6d8 <__libc_fini_array+0x30>)
 6b6:	18a5      	adds	r5, r4, r2
 6b8:	00ad      	lsls	r5, r5, #2
 6ba:	18ed      	adds	r5, r5, r3
 6bc:	682b      	ldr	r3, [r5, #0]
 6be:	3c01      	subs	r4, #1
 6c0:	4798      	blx	r3
 6c2:	3d04      	subs	r5, #4
 6c4:	2c00      	cmp	r4, #0
 6c6:	d1f9      	bne.n	6bc <__libc_fini_array+0x14>
 6c8:	f000 f892 	bl	7f0 <_fini>
 6cc:	bd70      	pop	{r4, r5, r6, pc}
 6ce:	46c0      	nop			; (mov r8, r8)
 6d0:	000007fc 	.word	0x000007fc
 6d4:	00000800 	.word	0x00000800
 6d8:	3fffffff 	.word	0x3fffffff

000006dc <__retarget_lock_acquire_recursive>:
 6dc:	4770      	bx	lr
 6de:	46c0      	nop			; (mov r8, r8)

000006e0 <__retarget_lock_release_recursive>:
 6e0:	4770      	bx	lr
 6e2:	46c0      	nop			; (mov r8, r8)

000006e4 <__register_exitproc>:
 6e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 6e6:	464e      	mov	r6, r9
 6e8:	4645      	mov	r5, r8
 6ea:	46de      	mov	lr, fp
 6ec:	4657      	mov	r7, sl
 6ee:	b5e0      	push	{r5, r6, r7, lr}
 6f0:	4d36      	ldr	r5, [pc, #216]	; (7cc <__register_exitproc+0xe8>)
 6f2:	b083      	sub	sp, #12
 6f4:	0006      	movs	r6, r0
 6f6:	6828      	ldr	r0, [r5, #0]
 6f8:	4698      	mov	r8, r3
 6fa:	000f      	movs	r7, r1
 6fc:	4691      	mov	r9, r2
 6fe:	f7ff ffed 	bl	6dc <__retarget_lock_acquire_recursive>
 702:	4b33      	ldr	r3, [pc, #204]	; (7d0 <__register_exitproc+0xec>)
 704:	681c      	ldr	r4, [r3, #0]
 706:	23a4      	movs	r3, #164	; 0xa4
 708:	005b      	lsls	r3, r3, #1
 70a:	58e0      	ldr	r0, [r4, r3]
 70c:	2800      	cmp	r0, #0
 70e:	d052      	beq.n	7b6 <__register_exitproc+0xd2>
 710:	6843      	ldr	r3, [r0, #4]
 712:	2b1f      	cmp	r3, #31
 714:	dc13      	bgt.n	73e <__register_exitproc+0x5a>
 716:	1c5a      	adds	r2, r3, #1
 718:	9201      	str	r2, [sp, #4]
 71a:	2e00      	cmp	r6, #0
 71c:	d128      	bne.n	770 <__register_exitproc+0x8c>
 71e:	9a01      	ldr	r2, [sp, #4]
 720:	3302      	adds	r3, #2
 722:	009b      	lsls	r3, r3, #2
 724:	6042      	str	r2, [r0, #4]
 726:	501f      	str	r7, [r3, r0]
 728:	6828      	ldr	r0, [r5, #0]
 72a:	f7ff ffd9 	bl	6e0 <__retarget_lock_release_recursive>
 72e:	2000      	movs	r0, #0
 730:	b003      	add	sp, #12
 732:	bc3c      	pop	{r2, r3, r4, r5}
 734:	4690      	mov	r8, r2
 736:	4699      	mov	r9, r3
 738:	46a2      	mov	sl, r4
 73a:	46ab      	mov	fp, r5
 73c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 73e:	4b25      	ldr	r3, [pc, #148]	; (7d4 <__register_exitproc+0xf0>)
 740:	2b00      	cmp	r3, #0
 742:	d03d      	beq.n	7c0 <__register_exitproc+0xdc>
 744:	20c8      	movs	r0, #200	; 0xc8
 746:	0040      	lsls	r0, r0, #1
 748:	e000      	b.n	74c <__register_exitproc+0x68>
 74a:	bf00      	nop
 74c:	2800      	cmp	r0, #0
 74e:	d037      	beq.n	7c0 <__register_exitproc+0xdc>
 750:	22a4      	movs	r2, #164	; 0xa4
 752:	2300      	movs	r3, #0
 754:	0052      	lsls	r2, r2, #1
 756:	58a1      	ldr	r1, [r4, r2]
 758:	6043      	str	r3, [r0, #4]
 75a:	6001      	str	r1, [r0, #0]
 75c:	50a0      	str	r0, [r4, r2]
 75e:	3240      	adds	r2, #64	; 0x40
 760:	5083      	str	r3, [r0, r2]
 762:	3204      	adds	r2, #4
 764:	5083      	str	r3, [r0, r2]
 766:	3301      	adds	r3, #1
 768:	9301      	str	r3, [sp, #4]
 76a:	2300      	movs	r3, #0
 76c:	2e00      	cmp	r6, #0
 76e:	d0d6      	beq.n	71e <__register_exitproc+0x3a>
 770:	009a      	lsls	r2, r3, #2
 772:	4692      	mov	sl, r2
 774:	4482      	add	sl, r0
 776:	464a      	mov	r2, r9
 778:	2188      	movs	r1, #136	; 0x88
 77a:	4654      	mov	r4, sl
 77c:	5062      	str	r2, [r4, r1]
 77e:	22c4      	movs	r2, #196	; 0xc4
 780:	0052      	lsls	r2, r2, #1
 782:	4691      	mov	r9, r2
 784:	4481      	add	r9, r0
 786:	464a      	mov	r2, r9
 788:	3987      	subs	r1, #135	; 0x87
 78a:	4099      	lsls	r1, r3
 78c:	6812      	ldr	r2, [r2, #0]
 78e:	468b      	mov	fp, r1
 790:	430a      	orrs	r2, r1
 792:	4694      	mov	ip, r2
 794:	464a      	mov	r2, r9
 796:	4661      	mov	r1, ip
 798:	6011      	str	r1, [r2, #0]
 79a:	2284      	movs	r2, #132	; 0x84
 79c:	4641      	mov	r1, r8
 79e:	0052      	lsls	r2, r2, #1
 7a0:	50a1      	str	r1, [r4, r2]
 7a2:	2e02      	cmp	r6, #2
 7a4:	d1bb      	bne.n	71e <__register_exitproc+0x3a>
 7a6:	0002      	movs	r2, r0
 7a8:	465c      	mov	r4, fp
 7aa:	328d      	adds	r2, #141	; 0x8d
 7ac:	32ff      	adds	r2, #255	; 0xff
 7ae:	6811      	ldr	r1, [r2, #0]
 7b0:	430c      	orrs	r4, r1
 7b2:	6014      	str	r4, [r2, #0]
 7b4:	e7b3      	b.n	71e <__register_exitproc+0x3a>
 7b6:	0020      	movs	r0, r4
 7b8:	304d      	adds	r0, #77	; 0x4d
 7ba:	30ff      	adds	r0, #255	; 0xff
 7bc:	50e0      	str	r0, [r4, r3]
 7be:	e7a7      	b.n	710 <__register_exitproc+0x2c>
 7c0:	6828      	ldr	r0, [r5, #0]
 7c2:	f7ff ff8d 	bl	6e0 <__retarget_lock_release_recursive>
 7c6:	2001      	movs	r0, #1
 7c8:	4240      	negs	r0, r0
 7ca:	e7b1      	b.n	730 <__register_exitproc+0x4c>
 7cc:	20000430 	.word	0x20000430
 7d0:	000007d8 	.word	0x000007d8
 7d4:	00000000 	.word	0x00000000

000007d8 <_global_impure_ptr>:
 7d8:	20000008                                ... 

000007dc <_init>:
 7dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 7de:	46c0      	nop			; (mov r8, r8)
 7e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 7e2:	bc08      	pop	{r3}
 7e4:	469e      	mov	lr, r3
 7e6:	4770      	bx	lr

000007e8 <__init_array_start>:
 7e8:	00000681 	.word	0x00000681

000007ec <__frame_dummy_init_array_entry>:
 7ec:	000000dd                                ....

000007f0 <_fini>:
 7f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 7f2:	46c0      	nop			; (mov r8, r8)
 7f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 7f6:	bc08      	pop	{r3}
 7f8:	469e      	mov	lr, r3
 7fa:	4770      	bx	lr

000007fc <__fini_array_start>:
 7fc:	000000b5 	.word	0x000000b5
